@mixin makeButton ($bgColor: 'red') {
  padding: 7px 20px;
  font-size: $ft_medium;
  font-weight: bold;
  text-align: center;
  border-radius: 4px;
  
  @if $bgColor=='yellow' {
    background-color: $pointColor_yellow;
    color: #fff;

    &:hover,
    &:focus {
      background-color: $pointColor_yellow_dark;
      color: #fff;
      box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    }
  }

  @else if $bgColor=='gray' {
    background-color: $light_gray;
    color: #000;

    &:hover,
    &:focus {
      background-color: $light_dark_gray;
      color: #000;
      box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    }
  }

  @else {
    background-color: $pointColor_red;
    color: #fff;

    &:hover,
    &:focus {
      background-color: $pointColor_red_dark;
      color: #fff;
      box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    }
  }
}

@mixin clearFloat {
  &:after {
    display: block;
    clear: both;
    content: '';
  }
}

@mixin respond-to($breakpoint) {

  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {

    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
    +"Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin pagenation_button($fontsize) {
  color: #fff;
  font-size: $fontsize;
  padding: 0 10px;
  text-decoration: none;

  &.active {
    color: $pointColor_yellow;

    &:hover {
      color: $pointColor_red;
      text-decoration: none;
    }
  }

  &.disabled {
    color: $light_dark_gray;
    cursor: not-allowed;
    &:hover{
      color:$light_dark_gray;
      cursor: not-allowed;
    }
  }

  &:hover {
    color: $pointColor_yellow;
    text-decoration: none;
  }
}

@mixin pageBigTitle {
  font-size: $ft_pgTitle;
  font-weight: bold;
  margin: 150px 0 50px;
  text-align: center;
}
